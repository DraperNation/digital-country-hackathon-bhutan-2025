import { ChatMessage, Dataset, AuditEntry, Job } from '@/types';
import { Integration } from '@/types';

export const mockChatMessages: ChatMessage[] = [
  {
    id: '1',
    content: 'Hello! How can I help you with Dzongkha language processing today?',
    role: 'assistant',
    timestamp: new Date('2024-01-15T10:00:00Z'),
    sources: [
      {
        id: 's1',
        title: 'Dzongkha Language Documentation',
        url: 'https://example.com/dzongkha-docs',
        excerpt: 'Comprehensive guide to Dzongkha grammar and syntax...',
        confidence: 0.95,
        type: 'document',
      },
    ],
    metadata: {
      model: 'druk-gpt-base',
      language: 'en',
      tokens: 156,
    },
  },
  {
    id: '2',
    content: 'Can you help me translate this text to Dzongkha?',
    role: 'user',
    timestamp: new Date('2024-01-15T10:01:00Z'),
    metadata: {
      language: 'en',
      tokens: 89,
    },
  },
  {
    id: '3',
    content: 'I\'d be happy to help you translate text to Dzongkha. Please provide the text you\'d like to translate.',
    role: 'assistant',
    timestamp: new Date('2024-01-15T10:01:30Z'),
    sources: [
      {
        id: 's2',
        title: 'Dzongkha Translation Guidelines',
        url: 'https://example.com/translation-guide',
        excerpt: 'Best practices for English to Dzongkha translation...',
        confidence: 0.88,
        type: 'document',
      },
    ],
    metadata: {
      model: 'druk-gpt-base',
      language: 'en',
      tokens: 203,
    },
  },
];

export const mockDatasets: Dataset[] = [
  {
    id: 'ds1',
    name: 'Dzongkha Literature Corpus',
    type: 'text',
    size: 524288000, // 500MB
    license: 'CC-BY-SA-4.0',
    checksum: 'sha256:a1b2c3d4e5f6...',
    uploadedAt: new Date('2024-01-10T09:00:00Z'),
    status: 'verified',
    blockchain: {
      network: 'polygon',
      txId: '0x1a2b3c4d5e6f7890abcdef1234567890abcdef1234567890abcdef1234567890',
      blockNumber: 45123789,
      confirmations: 2847,
      gasUsed: 21000,
      timestamp: new Date('2024-01-10T09:15:00Z'),
      explorerUrl: 'https://polygonscan.com/tx/0x1a2b3c4d5e6f7890abcdef1234567890abcdef1234567890abcdef1234567890',
    },
    metadata: {
      language: 'dz',
      domain: 'literature',
      quality: 0.92,
    },
  },
  {
    id: 'ds2',
    name: 'Bhutanese News Articles',
    type: 'text',
    size: 157286400, // 150MB
    license: 'CC-BY-4.0',
    checksum: 'sha256:b2c3d4e5f6a1...',
    uploadedAt: new Date('2024-01-12T14:30:00Z'),
    status: 'processing',
    metadata: {
      language: 'dz',
      domain: 'news',
      quality: 0.87,
    },
  },
  {
    id: 'ds3',
    name: 'Government Documents',
    type: 'text',
    size: 73400320, // 70MB
    license: 'Open Government License',
    checksum: 'sha256:c3d4e5f6a1b2...',
    uploadedAt: new Date('2024-01-14T11:15:00Z'),
    status: 'verified',
    blockchain: {
      network: 'ethereum',
      txId: '0xabcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890',
      blockNumber: 18967234,
      confirmations: 156,
      gasUsed: 45000,
      timestamp: new Date('2024-01-14T11:30:00Z'),
      explorerUrl: 'https://etherscan.io/tx/0xabcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890',
    },
    metadata: {
      language: 'dz',
      domain: 'government',
      quality: 0.95,
    },
  },
  {
    id: 'ds4',
    name: 'Oral History Recordings',
    type: 'audio',
    size: 1073741824, // 1GB
    license: 'Cultural Heritage License',
    checksum: 'sha256:d4e5f6a1b2c3...',
    uploadedAt: new Date('2024-01-08T16:45:00Z'),
    status: 'failed',
    metadata: {
      language: 'dz',
      domain: 'oral-history',
      quality: 0.78,
    },
  },
  {
    id: 'ds5',
    name: 'Cultural Heritage Videos',
    type: 'video',
    size: 2147483648, // 2GB
    license: 'Cultural Commons',
    checksum: 'sha256:e5f6a1b2c3d4...',
    uploadedAt: new Date('2024-01-16T08:20:00Z'),
    status: 'verified',
    blockchain: {
      network: 'solana',
      txId: '5j6k7l8m9n0o1p2q3r4s5t6u7v8w9x0y1z2a3b4c5d6e7f8g9h0i1j2k3l4m5n6o7p8',
      blockNumber: 234567890,
      confirmations: 4521,
      timestamp: new Date('2024-01-16T08:35:00Z'),
      explorerUrl: 'https://solscan.io/tx/5j6k7l8m9n0o1p2q3r4s5t6u7v8w9x0y1z2a3b4c5d6e7f8g9h0i1j2k3l4m5n6o7p8',
    },
    metadata: {
      language: 'dz',
      domain: 'cultural-heritage',
      quality: 0.94,
    },
  },
  {
    id: 'ds6',
    name: 'Agricultural Research Data',
    type: 'text',
    size: 104857600, // 100MB
    license: 'Open Data License',
    checksum: 'sha256:f6a1b2c3d4e5...',
    uploadedAt: new Date('2024-01-17T13:45:00Z'),
    status: 'verified',
    blockchain: {
      network: 'avalanche',
      txId: '0x9z8y7x6w5v4u3t2s1r0q9p8o7n6m5l4k3j2i1h0g9f8e7d6c5b4a3z2y1x0w9v8u7t6',
      blockNumber: 37894562,
      confirmations: 892,
      gasUsed: 32000,
      timestamp: new Date('2024-01-17T14:00:00Z'),
      explorerUrl: 'https://snowtrace.io/tx/0x9z8y7x6w5v4u3t2s1r0q9p8o7n6m5l4k3j2i1h0g9f8e7d6c5b4a3z2y1x0w9v8u7t6',
    },
    metadata: {
      language: 'en',
      domain: 'agriculture',
      quality: 0.89,
    },
  },
];

export const mockAuditEntries: AuditEntry[] = [
  {
    id: 'audit1',
    action: 'dataset.upload',
    user: 'researcher@drukgpt.bt',
    timestamp: new Date('2024-01-15T09:30:00Z'),
    resource: 'ds1',
    details: {
      filename: 'dzongkha_literature.txt',
      size: 524288000,
      checksum: 'sha256:a1b2c3d4e5f6...',
    },
    status: 'success',
  },
  {
    id: 'audit2',
    action: 'model.fine_tune',
    user: 'admin@drukgpt.bt',
    timestamp: new Date('2024-01-15T08:15:00Z'),
    resource: 'job1',
    details: {
      model: 'druk-gpt-base',
      dataset: 'ds1',
      epochs: 10,
      learningRate: 0.0001,
    },
    status: 'success',
  },
  {
    id: 'audit3',
    action: 'chat.message',
    user: 'user@drukgpt.bt',
    timestamp: new Date('2024-01-15T10:01:00Z'),
    resource: 'session123',
    details: {
      messageId: '2',
      model: 'druk-gpt-base',
      tokens: 89,
    },
    status: 'success',
  },
  {
    id: 'audit4',
    action: 'dataset.delete',
    user: 'admin@drukgpt.bt',
    timestamp: new Date('2024-01-14T17:22:00Z'),
    resource: 'ds_old_1',
    details: {
      reason: 'Data quality issues',
      backup_location: 's3://backup/ds_old_1',
    },
    status: 'warning',
  },
];

export const mockJobs: Job[] = [
  {
    id: 'job1',
    name: 'Literature Fine-tuning v2.1',
    type: 'fine-tuning',
    status: 'completed',
    progress: 100,
    startedAt: new Date('2024-01-14T09:00:00Z'),
    completedAt: new Date('2024-01-14T15:30:00Z'),
    config: {
      model: 'druk-gpt-base',
      dataset: 'ds1',
      epochs: 10,
      learningRate: 0.0001,
    },
    metrics: {
      loss: 0.142,
      accuracy: 0.891,
      perplexity: 1.152,
    },
  },
  {
    id: 'job2',
    name: 'News Domain Adaptation',
    type: 'fine-tuning',
    status: 'running',
    progress: 65,
    startedAt: new Date('2024-01-15T06:00:00Z'),
    config: {
      model: 'druk-gpt-base',
      dataset: 'ds2',
      epochs: 8,
      learningRate: 0.00005,
    },
    metrics: {
      loss: 0.198,
      accuracy: 0.834,
    },
  },
  {
    id: 'job3',
    name: 'Model Evaluation Benchmark',
    type: 'evaluation',
    status: 'pending',
    progress: 0,
    config: {
      model: 'druk-gpt-v2.1',
      dataset: 'eval_benchmark',
    },
  },
  {
    id: 'job4',
    name: 'Production Deployment',
    type: 'deployment',
    status: 'failed',
    progress: 23,
    startedAt: new Date('2024-01-13T14:00:00Z'),
    config: {
      model: 'druk-gpt-v2.0',
      dataset: '',
    },
  },
];

export const mockIntegrations: Integration[] = [
  {
    id: 'whatsapp-business',
    name: 'WhatsApp Business',
    type: 'messaging',
    status: 'connected',
    description: 'Integrate DrukGPT with WhatsApp Business API for customer support and automated responses in Dzongkha.',
    icon: 'MessageCircle',
    provider: 'Meta',
    config: {
      apiKey: '****-****-****-1234',
      webhookUrl: 'https://api.drukgpt.bt/webhooks/whatsapp',
      phoneNumberId: '+975-****-****',
      businessAccountId: 'wa_****_****',
    },
    lastSync: new Date('2024-01-15T14:30:00Z'),
    usage: {
      dailyMessages: 456,
      monthlyMessages: 12340,
      activeUsers: 89,
    },
    features: [
      'Automated customer responses',
      'Dzongkha language support',
      'File sharing capabilities',
      'Group chat management',
    ],
    setupInstructions: [
      'Create a WhatsApp Business account',
      'Get approval for WhatsApp Business API',
      'Configure webhook endpoint',
      'Set up phone number verification',
    ],
  },
  {
    id: 'telegram-bot',
    name: 'Telegram Bot',
    type: 'messaging',
    status: 'connected',
    description: 'Deploy DrukGPT as a Telegram bot for real-time conversations and document processing.',
    icon: 'Send',
    provider: 'Telegram',
    config: {
      botToken: '****:****-****-****-1234',
      webhookUrl: 'https://api.drukgpt.bt/webhooks/telegram',
      botUsername: '@DrukGPTBot',
    },
    lastSync: new Date('2024-01-15T15:45:00Z'),
    usage: {
      dailyMessages: 234,
      monthlyMessages: 6780,
      activeUsers: 45,
    },
    features: [
      'Inline queries support',
      'File processing',
      'Group administration',
      'Custom keyboards',
    ],
    setupInstructions: [
      'Create bot via @BotFather',
      'Configure bot settings',
      'Set webhook URL',
      'Test bot functionality',
    ],
  },
  {
    id: 'microsoft-teams',
    name: 'Microsoft Teams',
    type: 'collaboration',
    status: 'requires-setup',
    description: 'Integrate DrukGPT into Microsoft Teams for enhanced collaboration and AI-powered assistance.',
    icon: 'Users',
    provider: 'Microsoft',
    config: {
      appId: '****-****-****-****',
      tenantId: '****-****-****-****',
      clientSecret: '****-****-****-1234',
    },
    usage: {
      dailyMessages: 0,
      monthlyMessages: 0,
      activeUsers: 0,
    },
    features: [
      'Teams bot integration',
      'Meeting transcription',
      'Document collaboration',
      'Task automation',
    ],
    setupInstructions: [
      'Register app in Azure AD',
      'Configure Teams app manifest',
      'Set up bot framework',
      'Deploy to Teams store',
    ],
  },
  {
    id: 'slack',
    name: 'Slack',
    type: 'collaboration',
    status: 'connected',
    description: 'Add DrukGPT to Slack workspaces for team productivity and knowledge sharing.',
    icon: 'Hash',
    provider: 'Slack',
    config: {
      botToken: 'xoxb-****-****-****-1234',
      appId: 'A****1234',
      signingSecret: '****-****-****-1234',
      workspaceId: 'T****1234',
    },
    lastSync: new Date('2024-01-15T13:20:00Z'),
    usage: {
      dailyMessages: 167,
      monthlyMessages: 4890,
      activeUsers: 23,
    },
    features: [
      'Slash commands',
      'Interactive messages',
      'File sharing',
      'Workflow automation',
    ],
    setupInstructions: [
      'Create Slack app',
      'Configure OAuth & permissions',
      'Set up event subscriptions',
      'Install to workspace',
    ],
  },
  {
    id: 'notion',
    name: 'Notion',
    type: 'productivity',
    status: 'disconnected',
    description: 'Connect DrukGPT to Notion for AI-powered content generation and knowledge management.',
    icon: 'FileText',
    provider: 'Notion',
    config: {
      integrationToken: '****_****_****_1234',
      databaseId: '****-****-****-****',
    },
    usage: {
      dailyMessages: 0,
      monthlyMessages: 0,
      activeUsers: 0,
    },
    features: [
      'Page generation',
      'Database updates',
      'Content enhancement',
      'Template creation',
    ],
    setupInstructions: [
      'Create Notion integration',
      'Configure database access',
      'Set up API permissions',
      'Test connection',
    ],
  },
  {
    id: 'discord',
    name: 'Discord',
    type: 'social',
    status: 'error',
    description: 'Deploy DrukGPT as a Discord bot for community engagement and moderation.',
    icon: 'MessageSquare',
    provider: 'Discord',
    config: {
      botToken: '****-****-****-1234',
      applicationId: '****1234****',
      guildId: '****1234****',
    },
    usage: {
      dailyMessages: 0,
      monthlyMessages: 0,
      activeUsers: 0,
    },
    features: [
      'Slash commands',
      'Message reactions',
      'Voice channel integration',
      'Moderation tools',
    ],
    setupInstructions: [
      'Create Discord application',
      'Configure bot permissions',
      'Add to Discord server',
      'Set up command handlers',
    ],
  },
  {
    id: 'webhook-generic',
    name: 'Generic Webhook',
    type: 'webhook',
    status: 'connected',
    description: 'Custom webhook integration for connecting DrukGPT to any third-party service.',
    icon: 'Webhook',
    provider: 'Custom',
    config: {
      webhookUrl: 'https://your-service.com/webhook',
      secret: '****-****-****-1234',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ****',
      },
    },
    lastSync: new Date('2024-01-15T16:10:00Z'),
    usage: {
      dailyMessages: 89,
      monthlyMessages: 2340,
      activeUsers: 12,
    },
    features: [
      'Custom payload format',
      'Authentication support',
      'Retry mechanism',
      'Error handling',
    ],
    setupInstructions: [
      'Configure endpoint URL',
      'Set authentication method',
      'Define payload structure',
      'Test webhook delivery',
    ],
  },
];